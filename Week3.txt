October 18, 2017 -- Back to class!!!
Week 3 -- 

Q29. Find last name and first name of those employees whose last name start with the letter k


mysql> use hr;
Database changed


=====================================
Using the LIKE operator and string Functions
LEFT(string,#chrs)
RIGHT(string, #chrs)
SUBSTR(string, sp, #chrs)

Function Arguments Indicate

string = input string
sp = starting position
#chrs = Number of characters

============================================

Q29. Find last name and first name of those employees whose last name start with the letter k


mysql> select last_name, first_name
    -> from employees
    -> where last_name LIKE 'k%';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| King      | Steven     |
| Kochhar   | Neena      |
+-----------+------------+
2 rows in set (0.05 sec)


Q30. Find last name and first name of those employees whose last name do not start with the letter k

mysql> select last_name, first_name
    -> from employees
    -> where last_name NOT LIKE 'k%';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| Hunold    | Alexander  |
| Ernst     | Bruce      |
| Lorentz   | Diana      |
| Mourgos   | Kevin      |
| Rajs      | Trenna     |
| Davies    | Curtis     |
| Matos     | Randall    |
| Vargas    | Peter      |
| Zlotkey   | Eleni      |
| Abel      | Ellen      |
| Taylor    | Jonathon   |
| Grant     | Kimberely  |
| Whalen    | Jennifer   |
| Hartstein | Michael    |
| Fay       | Pat        |
| Higgins   | Shelley    |
| Gietz     | William    |
+-----------+------------+
17 rows in set (0.00 sec)


Q31. Find last name and first name of those employees whose last name contain the letter k

mysql> select last_name, first_name
    -> from employees
    -> where last_name LIKE '%k%';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| King      | Steven     |
| Kochhar   | Neena      |
| Zlotkey   | Eleni      |
+-----------+------------+
3 rows in set (0.00 sec)


Q32. Find last name and first name of those employees whose last name's second letter is the letter o


mysql> select last_name, first_name
    -> from employees
    -> where last_name LIKE '_o%';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| Kochhar   | Neena      |
| Lorentz   | Diana      |
| Mourgos   | Kevin      |
+-----------+------------+
3 rows in set (0.00 sec)

Q33. Same as Q29 but using the function LEFT

mysql> select last_name, first_name
    -> from employees
    -> where LEFT(last_name,1) = 'k';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| King      | Steven     |
| Kochhar   | Neena      |
+-----------+------------+
2 rows in set (0.02 sec)

Q34. Find last name and first name of those employees whose last name last 3 characaters are ing

mysql> select last_name, first_name
    -> from employees
    -> where RIGHT(last_name,3) = 'ing';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| King      | Steven     |
+-----------+------------+
1 row in set (0.00 sec)


Q35. Same as Q32 but using the function SUBSTRING, SUBSTR

mysql> select last_name, first_name
    -> from employees
    -> where SUBSTRING(last_name,2,1) = 'o';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| Kochhar   | Neena      |
| Lorentz   | Diana      |
| Mourgos   | Kevin      |
+-----------+------------+
3 rows in set (0.00 sec)

Same result with SUBSTR function


mysql> select last_name, first_name
    -> from employees
    -> where SUBSTR(last_name,2,1) = 'o';
+-----------+------------+
| last_name | first_name |
+-----------+------------+
| Kochhar   | Neena      |
| Lorentz   | Diana      |
| Mourgos   | Kevin      |
+-----------+------------+
3 rows in set (0.00 sec)


========================== ============================ ===============================
Querying Multiple Tables

Q36. Display the employee names as well as the department name that they work for.


mysql> desc employees;
+----------------+--------------+------+-----+---------+-------+
| Field          | Type         | Null | Key | Default | Extra |
+----------------+--------------+------+-----+---------+-------+
| Employee_id    | decimal(6,0) | NO   | PRI | NULL    |       |
| First_Name     | varchar(20)  | YES  |     | NULL    |       |
| Last_Name      | varchar(25)  | NO   |     | NULL    |       |
| Email          | varchar(20)  | YES  |     | NULL    |       |
| Phone_Number   | varchar(20)  | YES  |     | NULL    |       |
| Hire_Date      | date         | NO   |     | NULL    |       |
| Job_Id         | varchar(10)  | YES  |     | NULL    |       |
| Salary         | decimal(8,2) | YES  |     | NULL    |       |
| Commission_Pct | decimal(2,2) | YES  |     | NULL    |       |
| Manager_Id     | decimal(6,0) | YES  |     | NULL    |       |
| Department_Id  | decimal(4,0) | YES  |     | NULL    |       | <-----
+----------------+--------------+------+-----+---------+-------+
11 rows in set (0.04 sec)


mysql> show tables;
+--------------+
| Tables_in_hr |
+--------------+
| countries    |
| departments  |
| employees    |
| job_grades   |
| job_history  |
| jobs         |
| locations    |
| music        |
| regions      |
+--------------+
9 rows in set (0.01 sec)

mysql> desc departments;
+-----------------+--------------+------+-----+---------+-------+
| Field           | Type         | Null | Key | Default | Extra |
+-----------------+--------------+------+-----+---------+-------+
| Department_Id   | decimal(4,0) | NO   | PRI | NULL    |       | <-----
| Department_Name | varchar(30)  | NO   |     | NULL    |       |
| Manager_Id      | decimal(6,0) | YES  |     | NULL    |       |
| Location_Id     | decimal(4,0) | YES  |     | NULL    |       |
+-----------------+--------------+------+-----+---------+-------+
4 rows in set (0.03 sec)

Standard Syntax

mysql> Select employees.last_name Name, departments.department_name Department
    -> from employees, departments
    -> where employees.department_id = departments.department_id;
+-----------+----------------+
| Name      | Department     |
+-----------+----------------+
| King      | Executive      |
| Kochhar   | Executive      |
| Hunold    | IT             |
| Ernst     | IT             |
| Lorentz   | IT             |
| Mourgos   | Shipping       |
| Rajs      | Shipping       |
| Davies    | Shipping       |
| Matos     | Shipping       |
| Vargas    | Shipping       |
| Zlotkey   | Sales          |
| Abel      | Sales          |
| Taylor    | Sales          |
| Whalen    | Administration |
| Hartstein | Marketing      |
| Fay       | Marketing      |
| Higgins   | Accounting     |
| Gietz     | Accounting     |
+-----------+----------------+
18 rows in set (0.09 sec)

Using table aliases

mysql> Select e.last_name Name, d.department_name Department
    -> from employees e, departments d
    -> where e.department_id = d.department_id;
+-----------+----------------+
| Name      | Department     |
+-----------+----------------+
| King      | Executive      |
| Kochhar   | Executive      |
| Hunold    | IT             |
| Ernst     | IT             |
| Lorentz   | IT             |
| Mourgos   | Shipping       |
| Rajs      | Shipping       |
| Davies    | Shipping       |
| Matos     | Shipping       |
| Vargas    | Shipping       |
| Zlotkey   | Sales          |
| Abel      | Sales          |
| Taylor    | Sales          |
| Whalen    | Administration |
| Hartstein | Marketing      |
| Fay       | Marketing      |
| Higgins   | Accounting     |
| Gietz     | Accounting     |
+-----------+----------------+
18 rows in set (0.00 sec)

Syntax 1999

mysql> Select e.last_name Name, d.department_name Department
    -> From employees e JOIN departments d
    ->      ON e.department_id = d.department_id;
+-----------+----------------+
| Name      | Department     |
+-----------+----------------+
| King      | Executive      |
| Kochhar   | Executive      |
| Hunold    | IT             |
| Ernst     | IT             |
| Lorentz   | IT             |
| Mourgos   | Shipping       |
| Rajs      | Shipping       |
| Davies    | Shipping       |
| Matos     | Shipping       |
| Vargas    | Shipping       |
| Zlotkey   | Sales          |
| Abel      | Sales          |
| Taylor    | Sales          |
| Whalen    | Administration |
| Hartstein | Marketing      |
| Fay       | Marketing      |
| Higgins   | Accounting     |
| Gietz     | Accounting     |
+-----------+----------------+
18 rows in set (0.00 sec)


Q37. Display department id, department name, location id, and city where the department is located.

mysql> desc departments;
+-----------------+--------------+------+-----+---------+-------+
| Field           | Type         | Null | Key | Default | Extra |
+-----------------+--------------+------+-----+---------+-------+
| Department_Id   | decimal(4,0) | NO   | PRI | NULL    |       |
| Department_Name | varchar(30)  | NO   |     | NULL    |       |
| Manager_Id      | decimal(6,0) | YES  |     | NULL    |       |
| Location_Id     | decimal(4,0) | YES  |     | NULL    |       | <------
+-----------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> show tables;
+--------------+
| Tables_in_hr |
+--------------+
| countries    |
| departments  |
| employees    |
| job_grades   |
| job_history  |
| jobs         |
| locations    |
| music        |
| regions      |
+--------------+
9 rows in set (0.02 sec)

mysql> desc locations;
+----------------+--------------+------+-----+---------+-------+
| Field          | Type         | Null | Key | Default | Extra |
+----------------+--------------+------+-----+---------+-------+
| Location_Id    | decimal(4,0) | NO   | PRI | NULL    |       | <------
| Street_Address | varchar(40)  | YES  |     | NULL    |       |
| Postal_Code    | varchar(12)  | YES  |     | NULL    |       |
| City           | varchar(30)  | NO   |     | NULL    |       |
| State_Province | varchar(25)  | YES  |     | NULL    |       |
| Country_Id     | char(2)      | YES  |     | NULL    |       |
+----------------+--------------+------+-----+---------+-------+
6 rows in set (0.04 sec)

Standard syntax


mysql> Select d.department_id as id, d.department_name Name, l.location_id, l.city as City
    -> from departments d, locations l
    -> where d.location_id = l.location_id
    -> Order by city;
+-----+----------------+-------------+---------------------+
| id  | Name           | location_id | City                |
+-----+----------------+-------------+---------------------+
|  80 | Sales          |        2500 | Oxford              |
| 190 | Contracting    |        1700 | Seattle             |
| 110 | Accounting     |        1700 | Seattle             |
|  90 | Executive      |        1700 | Seattle             |
|  10 | Administration |        1700 | Seattle             |
|  50 | Shipping       |        1500 | South San Francisco |
|  60 | IT             |        1400 | Southlake           |
|  20 | Marketing      |        1800 | Toronto             |
+-----+----------------+-------------+---------------------+
8 rows in set (0.04 sec)

Syntax 1999

mysql> Select d.department_id as id, d.department_name Name, l.location_id, l.city as City
    -> from departments d INNER JOIN locations l
    ->      ON d.location_id = l.location_id
    -> Order by city;
+-----+----------------+-------------+---------------------+
| id  | Name           | location_id | City                |
+-----+----------------+-------------+---------------------+
|  80 | Sales          |        2500 | Oxford              |
| 190 | Contracting    |        1700 | Seattle             |
| 110 | Accounting     |        1700 | Seattle             |
|  90 | Executive      |        1700 | Seattle             |
|  10 | Administration |        1700 | Seattle             |
|  50 | Shipping       |        1500 | South San Francisco |
|  60 | IT             |        1400 | Southlake           |
|  20 | Marketing      |        1800 | Toronto             |
+-----+----------------+-------------+---------------------+
8 rows in set (0.00 sec)


Q38. Find the department names and the names of their corresponding managers.

Standard syntax

mysql> Select d.department_name, e.last_name
    -> from employees e, departments d
    -> where e.department_id = d.department_id AND e.employee_id = d.manager_id;
+-----------------+-----------+
| department_name | last_name |
+-----------------+-----------+
| Administration  | Whalen    |
| Marketing       | Hartstein |
| Shipping        | Mourgos   |
| IT              | Hunold    |
| Sales           | Zlotkey   |
| Executive       | King      |
| Accounting      | Higgins   |
+-----------------+-----------+
7 rows in set (0.03 sec)

Syntax 1999

mysql> Select d.department_name, e.last_name
    -> from employees e INNER JOIN departments d
    ->      ON e.department_id = d.department_id
    -> where e.employee_id = d.manager_id;
+-----------------+-----------+
| department_name | last_name |
+-----------------+-----------+
| Administration  | Whalen    |
| Marketing       | Hartstein |
| Shipping        | Mourgos   |
| IT              | Hunold    |
| Sales           | Zlotkey   |
| Executive       | King      |
| Accounting      | Higgins   |
+-----------------+-----------+
7 rows in set (0.00 sec)


Q39. Display the names of employees that work in the Accounting department.

Standard syntax

mysql> Select e.last_name Name, d.department_name Department
    -> from employees e, departments d
    -> where e.department_id = d.department_id AND d.department_name = 'Accounting'
    -> ;
+---------+------------+
| Name    | Department |
+---------+------------+
| Higgins | Accounting |
| Gietz   | Accounting |
+---------+------------+
2 rows in set (0.00 sec)

Syntax 1999

mysql> Select e.last_name Name, d.department_name Department
    -> From employees e INNER JOIN departments d
    ->      ON e.department_id = d.department_id
    -> where d.department_name = 'Accounting';
+---------+------------+
| Name    | Department |
+---------+------------+
| Higgins | Accounting |
| Gietz   | Accounting |
+---------+------------+
2 rows in set (0.00 sec)


~~~ Q40. Who works for the Admin department?

Standard syntax

mysql> SElect e.last_name Name
    -> from employees e, departments d
    -> where e.department_id = d.department_id
    ->       AND d.department_name = 'Administration';
+--------+
| Name   |
+--------+
| Whalen |
+--------+
1 row in set (0.00 sec)

Syntax 1999

mysql> SElect e.last_name Name
    -> from employees e JOIN departments d
    ->       ON  e.department_id = d.department_id
    -> Where  d.department_name = 'Administration';
+--------+
| Name   |
+--------+
| Whalen |
+--------+
1 row in set (0.00 sec)

Using a LEFT() function to find the substring Admin

mysql> SElect e.last_name Name
    -> from employees e, departments d
    -> where e.department_id = d.department_id
    ->       AND LEFT(d.department_name, 5) = 'Admin';
+--------+
| Name   |
+--------+
| Whalen |
+--------+
1 row in set (0.00 sec)

mysql> desc regions;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| Region_Id   | decimal(2,0) | NO   |     | NULL    |       |
| Region_Name | varchar(25)  | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
2 rows in set (0.05 sec)

mysql> desc countries;
+--------------+--------------+------+-----+---------+-------+
| Field        | Type         | Null | Key | Default | Extra |
+--------------+--------------+------+-----+---------+-------+
| Country_Id   | char(2)      | NO   | PRI | NULL    |       |
| Country_Name | varchar(40)  | YES  |     | NULL    |       |
| Region_Id    | decimal(2,0) | YES  |     | NULL    |       |
+--------------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)


~~~Q41. Display the country name where Toronto is located.

mysql> desc locations;
+----------------+--------------+------+-----+---------+-------+
| Field          | Type         | Null | Key | Default | Extra |
+----------------+--------------+------+-----+---------+-------+
| Location_Id    | decimal(4,0) | NO   | PRI | NULL    |       |
| Street_Address | varchar(40)  | YES  |     | NULL    |       |
| Postal_Code    | varchar(12)  | YES  |     | NULL    |       |
| City           | varchar(30)  | NO   |     | NULL    |       |
| State_Province | varchar(25)  | YES  |     | NULL    |       |
| Country_Id     | char(2)      | YES  |     | NULL    |       | <----
+----------------+--------------+------+-----+---------+-------+
6 rows in set (0.01 sec)

mysql> desc countries;
+--------------+--------------+------+-----+---------+-------+
| Field        | Type         | Null | Key | Default | Extra |
+--------------+--------------+------+-----+---------+-------+
| Country_Id   | char(2)      | NO   | PRI | NULL    |       | <-----
| Country_Name | varchar(40)  | YES  |     | NULL    |       |
| Region_Id    | decimal(2,0) | YES  |     | NULL    |       |
+--------------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

Standard syntax

mysql> Select c.country_name Country
    -> from Locations l, Countries c
    -> where  l.country_id = c.country_id
    ->     AND l.City = 'Toronto';
+---------+
| Country |
+---------+
| Canada  |
+---------+
1 row in set (0.02 sec)

Syntax 1999

mysql> Select c.country_name Country
    -> from Locations l  INNER JOIN Countries c
    ->      ON l.country_id = c.country_id
    -> where l.City = 'Toronto';
+---------+
| Country |
+---------+
| Canada  |
+---------+
1 row in set (0.02 sec)


Q42. How many people work for the Administration department?

Standard syntax

mysql> Select count(e.last_name) "Number Of Employees"
    -> from employees e, departments d
    -> Where e.department_id = d.department_id AND d.department_name = 'Administration';
+---------------------+
| Number Of Employees |
+---------------------+
|                   1 |
+---------------------+
1 row in set (0.00 sec)

Syntax 1999


mysql> Select count(e.last_name) "Number Of Employees"
    -> from employees e JOIN departments d
    ->      ON  e.department_id = d.department_id 
    -> Where  d.department_name = 'Administration';
+---------------------+
| Number Of Employees |
+---------------------+
|                   1 |
+---------------------+
1 row in set (0.00 sec)

Q43. Which department has more than 3 employees?

Standard syntax

mysql> Select d.department_name, count(e.employee_id)
    -> from employees e, departments d
    -> Where e.department_id = d.department_id
    -> Group by d.department_id
    -> having count(e.employee_id) > 3;
+-----------------+----------------------+
| department_name | count(e.employee_id) |
+-----------------+----------------------+
| Shipping        |                    5 |
+-----------------+----------------------+
1 row in set (0.01 sec)

Syntax 1999

mysql> Select d.department_name, count(e.employee_id)
    -> from employees e JOIN departments d
    ->      ON  e.department_id = d.department_id
    -> Group by d.department_id
    -> having count(e.employee_id) > 3;
+-----------------+----------------------+
| department_name | count(e.employee_id) |
+-----------------+----------------------+
| Shipping        |                    5 |
+-----------------+----------------------+
1 row in set (0.01 sec)


mysql> exit;

============================== Extra Question to Practice ========================================


Remember to use aliases for the table names.

P1. Join tables Departments and Employees (display one column of each table-- your choice)

a. Standard Syntax
b. Syntax 1999  

P2. Join tables Departments and Locations (display one column of each table-- your choice)

a. Standard Syntax
b. Syntax 1999  

P3. Join tables Locations and Countries (display one column of each table-- your choice)

a. Standard Syntax
b. Syntax 1999  

P4. Join tables Countries and Regions (display one column of each table-- your choice)

a. Standard Syntax
b. Syntax 1999  


--------------------------
Now answer the following questions:

QH1. How many employees work in each department? Display department Name and number of employees.

a. Standard Syntax

b. Syntax 1999


QH2. Display the region (name) of the world  corresponding to each country.
Display Country Name, and Region Name

a. Standard Syntax

b. Syntax 1999

Have a good week

-------------------------------------- End of file ----------------------------------------------------
